/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeeDooTeacherTest01,
  DeeDooTeacherTest01Interface,
} from "../DeeDooTeacherTest01";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addUtilityEarnedForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "addUtilityEarnedForAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminClaimAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowMultipleWhitelistMints",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "claimUtility",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimUtilityOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractWhiteListAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "courseName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getBalanceToClaimForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getUtilityClaimedForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getUtilityEarnedForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSoldOut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintPerWhiteListAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintPerWhiteListTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokenIdWhitelisted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAdminClaimAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setAllowMultipleWhitelistMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setClaimUtilityOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractWhiteListAddress",
        type: "address",
      },
    ],
    name: "setContractWhiteListAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxMintAmountPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintPerWhiteListAddress",
        type: "uint256",
      },
    ],
    name: "setMaxMintPerWhiteListAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintPerWhiteListTokenId",
        type: "uint256",
      },
    ],
    name: "setMaxMintPerWhiteListTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "setMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTokenIdWhitelisted",
        type: "uint256",
      },
    ],
    name: "setMaxTokenIdWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRevealed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriSuffix",
        type: "string",
      },
    ],
    name: "setUriSuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setUtilityEarnedForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setUtilityEarnedForAddressByAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "setUtilityEarnedForAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "setUtilityEarnedForAddressesByAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setWhitelistMintEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "utilityClaimedForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "utilityEarnedForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "validateNftTokenIdWhitelistedByOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteListAddressMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whiteListParentTokenIdMintCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nftTokenIdWhitelisted",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b9160109162000231565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a9160119162000231565b50600160168190556017556000601855601980546001600160c81b03191662010000179055601a80546001600160a01b03191690553480156200008c57600080fd5b5060405162003a8438038062003a84833981016040819052620000af91620003a4565b855186908690620000c890600290602085019062000231565b508051620000de90600390602084019062000231565b5050600160005550620000f1336200012e565b6001600955620001018462000180565b6200010c836200018f565b62000117826200019e565b6200012281620001ad565b5050505050506200048e565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200018a620001d0565b601355565b62000199620001d0565b601455565b620001a8620001d0565b601555565b620001b7620001d0565b8051620001cc90601290602084019062000231565b5050565b6008546001600160a01b031633146200022f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b8280546200023f9062000451565b90600052602060002090601f016020900481019282620002635760008555620002ae565b82601f106200027e57805160ff1916838001178555620002ae565b82800160010185558215620002ae579182015b82811115620002ae57825182559160200191906001019062000291565b50620002bc929150620002c0565b5090565b5b80821115620002bc5760008155600101620002c1565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ff57600080fd5b81516001600160401b03808211156200031c576200031c620002d7565b604051601f8301601f19908116603f01168101908282118183101715620003475762000347620002d7565b816040528381526020925086838588010111156200036457600080fd5b600091505b8382101562000388578582018301518183018401529082019062000369565b838211156200039a5760008385830101525b9695505050505050565b60008060008060008060c08789031215620003be57600080fd5b86516001600160401b0380821115620003d657600080fd5b620003e48a838b01620002ed565b97506020890151915080821115620003fb57600080fd5b620004098a838b01620002ed565b965060408901519550606089015194506080890151935060a08901519150808211156200043557600080fd5b506200044489828a01620002ed565b9150509295509295509295565b600181811c908216806200046657607f821691505b602082108114156200048857634e487b7160e01b600052602260045260246000fd5b50919050565b6135e6806200049e6000396000f3fe6080604052600436106104265760003560e01c8063715018a611610229578063b767a0981161012e578063e985e9c5116100b6578063f2fde38b1161007a578063f2fde38b14610c9d578063f44af06314610cbd578063f44fa75014610cf3578063f7ed3adb14610d13578063f900d95b14610d3357600080fd5b8063e985e9c514610bc7578063eba9efd714610c10578063edb303bd14610c30578063efbd73f414610c50578063f2827aeb14610c7057600080fd5b8063c87b56dd116100fd578063c87b56dd14610b31578063d5abeb0114610b51578063da26a54c14610b67578063db965ebc14610b87578063e0a8085314610ba757600080fd5b8063b767a09814610abf578063b88d4fde14610adf578063bb1c47b114610aff578063c4be5b5914610b1e57600080fd5b806395d89b41116101b1578063a49b7b9211610180578063a49b7b9214610a22578063adc275cf14610a42578063b071401b14610a58578063b0ccb28614610a78578063b24bb72414610a9857600080fd5b806395d89b41146109c5578063a0712d68146109da578063a22cb465146109ed578063a45ba8e714610a0d57600080fd5b80637ee7cffe116101f85780637ee7cffe146109315780638488d09a1461095157806389da7b5d146109715780638da5cb5b1461099157806394354fd0146109af57600080fd5b8063715018a6146108bc5780637b4e3f18146108d15780637cb64759146108f15780637ec4a6591461091157600080fd5b806331a951c51161032f578063557d7ae6116102b757806363a0054c1161028657806363a0054c1461081b578063659e7d1f1461083b5780636caede3d1461085b5780636f8b44b01461087c57806370a082311461089c57600080fd5b8063557d7ae6146107995780635c975abb146107c657806362b99ad4146107e65780636352211e146107fb57600080fd5b806344a0d68a116102fe57806344a0d68a146106f55780634a4f8a69146107155780634fdd43cb1461074257806351830227146107625780635503a0e81461078457600080fd5b806331a951c51461067d5780633ccfd60b1461069357806342842e0e146106a8578063438b6300146106c857600080fd5b806318160ddd116103b257806323b872dd1161038157806323b872dd146105f8578063249f85611461061857806324db4d79146106385780632da5ea17146106525780632eb4a7ab1461066757600080fd5b806318160ddd146105765780631ebcbb6e1461058b578063201a6803146105b8578063231940b0146105d857600080fd5b8063095ea7b3116103f9578063095ea7b3146104de5780630ee560481461050057806313faede61461052057806316ba10e01461053657806316c38b3c1461055657600080fd5b806301ffc9a71461042b57806305125ef41461046057806306fdde0314610484578063081812fc146104a6575b600080fd5b34801561043757600080fd5b5061044b610446366004612d41565b610d69565b60405190151581526020015b60405180910390f35b34801561046c57600080fd5b5061047660185481565b604051908152602001610457565b34801561049057600080fd5b50610499610dbb565b6040516104579190612db6565b3480156104b257600080fd5b506104c66104c1366004612dc9565b610e4d565b6040516001600160a01b039091168152602001610457565b3480156104ea57600080fd5b506104fe6104f9366004612df7565b610e91565b005b34801561050c57600080fd5b506104fe61051b366004612dc9565b610f1f565b34801561052c57600080fd5b5061047660135481565b34801561054257600080fd5b506104fe610551366004612ec0565b610f2c565b34801561056257600080fd5b506104fe610571366004612f1d565b610f4b565b34801561058257600080fd5b50610476610f6f565b34801561059757600080fd5b506104766105a6366004612f38565b600d6020526000908152604090205481565b3480156105c457600080fd5b506104fe6105d3366004612dc9565b610f7d565b3480156105e457600080fd5b506104fe6105f3366004612df7565b610f8a565b34801561060457600080fd5b506104fe610613366004612f55565b610fef565b34801561062457600080fd5b506104fe610633366004612f1d565b610ffa565b34801561064457600080fd5b5060195461044b9060ff1681565b34801561065e57600080fd5b5061044b611015565b34801561067357600080fd5b50610476600a5481565b34801561068957600080fd5b5061047660175481565b34801561069f57600080fd5b506104fe611028565b3480156106b457600080fd5b506104fe6106c3366004612f55565b611101565b3480156106d457600080fd5b506106e86106e3366004612f38565b61111c565b6040516104579190612f96565b34801561070157600080fd5b506104fe610710366004612dc9565b61125d565b34801561072157600080fd5b50610476610730366004612f38565b600f6020526000908152604090205481565b34801561074e57600080fd5b506104fe61075d366004612ec0565b61126a565b34801561076e57600080fd5b5060195461044b90640100000000900460ff1681565b34801561079057600080fd5b50610499611285565b3480156107a557600080fd5b506104766107b4366004612f38565b600e6020526000908152604090205481565b3480156107d257600080fd5b5060195461044b9062010000900460ff1681565b3480156107f257600080fd5b50610499611313565b34801561080757600080fd5b506104c6610816366004612dc9565b611320565b34801561082757600080fd5b506104fe610836366004612df7565b611332565b34801561084757600080fd5b50610476610856366004612f38565b61133a565b34801561086757600080fd5b5060195461044b906301000000900460ff1681565b34801561088857600080fd5b506104fe610897366004612dc9565b61139b565b3480156108a857600080fd5b506104766108b7366004612f38565b6113a8565b3480156108c857600080fd5b506104fe6113f6565b3480156108dd57600080fd5b506104fe6108ec366004613068565b61140a565b3480156108fd57600080fd5b506104fe61090c366004612dc9565b6114d1565b34801561091d57600080fd5b506104fe61092c366004612ec0565b6114de565b34801561093d57600080fd5b506104fe61094c366004612f38565b6114f9565b34801561095d57600080fd5b50601a546104c6906001600160a01b031681565b34801561097d57600080fd5b5061044b61098c366004612df7565b611523565b34801561099d57600080fd5b506008546001600160a01b03166104c6565b3480156109bb57600080fd5b5061047660155481565b3480156109d157600080fd5b506104996115db565b6104fe6109e8366004612dc9565b6115ea565b3480156109f957600080fd5b506104fe610a08366004613129565b611704565b348015610a1957600080fd5b5061049961179a565b348015610a2e57600080fd5b506104fe610a3d366004612f1d565b6117a7565b348015610a4e57600080fd5b5061047660165481565b348015610a6457600080fd5b506104fe610a73366004612dc9565b6117c9565b348015610a8457600080fd5b506104fe610a93366004612dc9565b6117d6565b348015610aa457600080fd5b506019546104c690600160281b90046001600160a01b031681565b348015610acb57600080fd5b506104fe610ada366004612f1d565b6117e3565b348015610aeb57600080fd5b506104fe610afa36600461315e565b611809565b348015610b0b57600080fd5b5060195461044b90610100900460ff1681565b6104fe610b2c3660046131dd565b61185a565b348015610b3d57600080fd5b50610499610b4c366004612dc9565b611dc3565b348015610b5d57600080fd5b5061047660145481565b348015610b7357600080fd5b506104fe610b82366004612f38565b611f35565b348015610b9357600080fd5b506104fe610ba2366004612dc9565b611f6b565b348015610bb357600080fd5b506104fe610bc2366004612f1d565b6120d0565b348015610bd357600080fd5b5061044b610be236600461325f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b348015610c1c57600080fd5b506104fe610c2b366004612df7565b6120f8565b348015610c3c57600080fd5b506104fe610c4b366004613068565b612144565b348015610c5c57600080fd5b506104fe610c6b366004613298565b61221c565b348015610c7c57600080fd5b50610476610c8b366004612dc9565b600c6020526000908152604090205481565b348015610ca957600080fd5b506104fe610cb8366004612f38565b612291565b348015610cc957600080fd5b50610476610cd8366004612f38565b6001600160a01b03166000908152600e602052604090205490565b348015610cff57600080fd5b50610499610d0e366004612dc9565b61230a565b348015610d1f57600080fd5b506104fe610d2e366004613068565b612323565b348015610d3f57600080fd5b50610476610d4e366004612f38565b6001600160a01b03166000908152600f602052604090205490565b60006001600160e01b031982166380ac58cd60e01b1480610d9a57506001600160e01b03198216635b5e139f60e01b145b80610db557506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060028054610dca906132bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610df6906132bd565b8015610e435780601f10610e1857610100808354040283529160200191610e43565b820191906000526020600020905b815481529060010190602001808311610e2657829003601f168201915b5050505050905090565b6000610e58826123b2565b610e75576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610e9c82611320565b9050806001600160a01b0316836001600160a01b03161415610ed15760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614801590610ef15750610eef8133610be2565b155b15610f0f576040516367d9dca160e11b815260040160405180910390fd5b610f1a8383836123eb565b505050565b610f27612447565b601855565b610f34612447565b8051610f47906011906020840190612c92565b5050565b610f53612447565b60198054911515620100000262ff000019909216919091179055565b600154600054036000190190565b610f85612447565b601755565b601a546001600160a01b031615801590610fae5750601a546001600160a01b031633145b610fd35760405162461bcd60e51b8152600401610fca906132f8565b60405180910390fd5b6001600160a01b039091166000908152600e6020526040902055565b610f1a8383836124a1565b611002612447565b6019805460ff1916911515919091179055565b600061101f610f6f565b60145414905090565b611030612447565b600260095414156110835760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610fca565b6002600955600061109c6008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d80600081146110e6576040519150601f19603f3d011682016040523d82523d6000602084013e6110eb565b606091505b50509050806110f957600080fd5b506001600955565b610f1a83838360405180602001604052806000815250611809565b60606000611129836113a8565b90506000816001600160401b0381111561114557611145612e23565b60405190808252806020026020018201604052801561116e578160200160208202803683370190505b50905060016000805b848210801561118857506014548311155b1561125257611196836123b2565b1561124057600083815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156111f857805191505b876001600160a01b0316826001600160a01b0316141561123e578385848151811061122557611225613346565b60209081029190910101528261123a81613372565b9350505b505b8261124a81613372565b935050611177565b509195945050505050565b611265612447565b601355565b611272612447565b8051610f47906012906020840190612c92565b60118054611292906132bd565b80601f01602080910402602001604051908101604052809291908181526020018280546112be906132bd565b801561130b5780601f106112e05761010080835404028352916020019161130b565b820191906000526020600020905b8154815290600101906020018083116112ee57829003601f168201915b505050505081565b60108054611292906132bd565b600061132b8261268f565b5192915050565b610fd3612447565b6001600160a01b0381166000908152600e6020908152604080832054600f909252822054111561136c57506000919050565b6001600160a01b0382166000908152600f6020908152604080832054600e90925290912054610db5919061338d565b6113a3612447565b601455565b60006001600160a01b0382166113d1576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6113fe612447565b61140860006127b6565b565b601a546001600160a01b03161580159061142e5750601a546001600160a01b031633145b61144a5760405162461bcd60e51b8152600401610fca906132f8565b60005b82518110801561145d5750815181105b15610f1a5781818151811061147457611474613346565b6020026020010151600e600085848151811061149257611492613346565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080806114c990613372565b91505061144d565b6114d9612447565b600a55565b6114e6612447565b8051610f47906010906020840190612c92565b611501612447565b601a80546001600160a01b0319166001600160a01b0392909216919091179055565b601954600090600160281b90046001600160a01b031661154557506000610db5565b6019546040516331a9108f60e11b8152600481018490526001600160a01b0385811692600160281b90041690636352211e9060240160206040518083038186803b15801561159257600080fd5b505afa1580156115a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ca91906133a4565b6001600160a01b0316149392505050565b606060038054610dca906132bd565b806000811180156115fd57506015548111155b6116195760405162461bcd60e51b8152600401610fca906133c1565b60145481611625610f6f565b61162f91906133ef565b111561164d5760405162461bcd60e51b8152600401610fca90613407565b818060135461165c9190613435565b3410156116a15760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610fca565b60195462010000900460ff16156116fa5760405162461bcd60e51b815260206004820152601760248201527f54686520636f6e747261637420697320706175736564210000000000000000006044820152606401610fca565b610f1a3384612808565b6001600160a01b03821633141561172e5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60128054611292906132bd565b6117af612447565b601980549115156101000261ff0019909216919091179055565b6117d1612447565b601555565b6117de612447565b601655565b6117eb612447565b6019805491151563010000000263ff00000019909216919091179055565b6118148484846124a1565b6001600160a01b0383163b15158015611836575061183484848484612822565b155b15611854576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b8360008111801561186d57506015548111155b6118895760405162461bcd60e51b8152600401610fca906133c1565b60145481611895610f6f565b61189f91906133ef565b11156118bd5760405162461bcd60e51b8152600401610fca90613407565b84806013546118cc9190613435565b3410156119115760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610fca565b6019546301000000900460ff166119755760405162461bcd60e51b815260206004820152602260248201527f5468652077686974656c6973742073616c65206973206e6f7420656e61626c65604482015261642160f01b6064820152608401610fca565b8415611b7a57601954610100900460ff16806119a057506016546000868152600c6020526040902054105b611a225760405162461bcd60e51b815260206004820152604760248201527f4e46542077686974656c697374656420616c726561647920636c61696d65642c60448201527f20796f75207265616368656420746865206d6178696d756d206d696e747320616064820152666c6c6f7765642160c81b608482015260a401610fca565b600085118015611a3457506018548511155b611a805760405162461bcd60e51b815260206004820152601c60248201527f4e465420546f6b656e206973206e6f742057686974656c6973746564000000006044820152606401610fca565b601954600160281b90046001600160a01b0316611b055760405162461bcd60e51b815260206004820152603d60248201527f54686520636f6e747261637420746f2076616c696461746520796f757220776860448201527f6974656c697374656420746f6b656e206964206973206e6f74207365740000006064820152608401610fca565b611b0f3386611523565b611b755760405162461bcd60e51b815260206004820152603160248201527f596f7520617265206e6f7420746865206f776e6572206f6620746865204e4654604482015270081d1bdad95b881a590818db185a5b5959607a1b6064820152608401610fca565b611d51565b600060175411611be25760405162461bcd60e51b815260206004820152602d60248201527f57686974656c6973742062792061646472657373206d696e74206973206e6f7460448201526c1032b730b13632b2103cb2ba1760991b6064820152608401610fca565b6040516bffffffffffffffffffffffff193360601b166020820152600090603401604051602081830303815290604052805190602001209050611c5c85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600a54915084905061291a565b611cb75760405162461bcd60e51b815260206004820152602660248201527f596f75722077616c6c65742061646472657373206973206e6f742077686974656044820152651b1a5cdd195960d21b6064820152608401610fca565b601954610100900460ff1680611cdd5750601754336000908152600d6020526040902054105b611d4f5760405162461bcd60e51b815260206004820152603c60248201527f596f75207265616368656420746865206d6178696d756d206d696e747320616c60448201527f6c6f776564207065722077686974656c697374206164647265737321000000006064820152608401610fca565b505b8415611d85576000858152600c6020526040902054611d719060016133ef565b6000868152600c6020526040902055611db1565b336000908152600d6020526040902054611da09060016133ef565b336000908152600d60205260409020555b611dbb3387612808565b505050505050565b6060611dce826123b2565b611e325760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610fca565b601954640100000000900460ff16611ed65760128054611e51906132bd565b80601f0160208091040260200160405190810160405280929190818152602001828054611e7d906132bd565b8015611eca5780601f10611e9f57610100808354040283529160200191611eca565b820191906000526020600020905b815481529060010190602001808311611ead57829003601f168201915b50505050509050919050565b6000611ee0612930565b90506000815111611f005760405180602001604052806000815250611f2e565b80611f0a8461293f565b6011604051602001611f1e93929190613454565b6040516020818303038152906040525b9392505050565b611f3d612447565b601980546001600160a01b03909216600160281b0265010000000000600160c81b0319909216919091179055565b60195460ff16611fe35760405162461bcd60e51b815260206004820152603f60248201527f54686520636c61696d207574696c6974792070726f636573732069732074656d60448201527f706f7261727920636c6f7365642c20636f6d65206261636b206c6174657221006064820152608401610fca565b611fec3361133a565b8111156120525760405162461bcd60e51b815260206004820152602e60248201527f416d6f756e74206578636565646573207468652062616c616e6365206176616960448201526d6c61626c6520746f20636c61696d60901b6064820152608401610fca565b336000908152600f602052604090205461206d9082906133ef565b336000818152600f602052604080822093909355915183908381818185875af1925050503d80600081146120bd576040519150601f19603f3d011682016040523d82523d6000602084013e6120c2565b606091505b5050905080610f4757600080fd5b6120d8612447565b601980549115156401000000000264ff0000000019909216919091179055565b612100612447565b6001600160a01b0382166000908152600e60205260409020546121249082906133ef565b6001600160a01b039092166000908152600e602052604090209190915550565b61214c612447565b60005b82518110801561215f5750815181105b15610f1a5781818151811061217657612176613346565b6020026020010151600e600085848151811061219457612194613346565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020546121c791906133ef565b600e60008584815181106121dd576121dd613346565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550808061221490613372565b91505061214f565b8160008111801561222f57506015548111155b61224b5760405162461bcd60e51b8152600401610fca906133c1565b60145481612257610f6f565b61226191906133ef565b111561227f5760405162461bcd60e51b8152600401610fca90613407565b612287612447565b610f1a8284612808565b612299612447565b6001600160a01b0381166122fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610fca565b612307816127b6565b50565b600b6020526000908152604090208054611292906132bd565b61232b612447565b60005b82518110801561233e5750815181105b15610f1a5781818151811061235557612355613346565b6020026020010151600e600085848151811061237357612373613346565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080806123aa90613372565b91505061232e565b6000816001111580156123c6575060005482105b8015610db5575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b031633146114085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610fca565b60006124ac8261268f565b9050836001600160a01b031681600001516001600160a01b0316146124e35760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061250157506125018533610be2565b8061251c57503361251184610e4d565b6001600160a01b0316145b90508061253c57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661256357604051633a954ecd60e21b815260040160405180910390fd5b61256f600084876123eb565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661264357600054821461264357805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b604080516060810182526000808252602082018190529181019190915281806001111580156126bf575060005481105b1561279d57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615159181018290529061279b5780516001600160a01b031615612732579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215612796579392505050565b612732565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f47828260405180602001604052806000815250612a3c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612857903390899088908890600401613518565b602060405180830381600087803b15801561287157600080fd5b505af19250505080156128a1575060408051601f3d908101601f1916820190925261289e91810190613555565b60015b6128fc573d8080156128cf576040519150601f19603f3d011682016040523d82523d6000602084013e6128d4565b606091505b5080516128f4576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6000826129278584612a49565b14949350505050565b606060108054610dca906132bd565b6060816129635750506040805180820190915260018152600360fc1b602082015290565b8160005b811561298d578061297781613372565b91506129869050600a83613588565b9150612967565b6000816001600160401b038111156129a7576129a7612e23565b6040519080825280601f01601f1916602001820160405280156129d1576020820181803683370190505b5090505b8415612912576129e660018361338d565b91506129f3600a8661359c565b6129fe9060306133ef565b60f81b818381518110612a1357612a13613346565b60200101906001600160f81b031916908160001a905350612a35600a86613588565b94506129d5565b610f1a8383836001612a96565b600081815b8451811015612a8e57612a7a82868381518110612a6d57612a6d613346565b6020026020010151612c66565b915080612a8681613372565b915050612a4e565b509392505050565b6000546001600160a01b038516612abf57604051622e076360e81b815260040160405180910390fd5b83612add5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b429092169190910217905580808501838015612b8e57506001600160a01b0387163b15155b15612c17575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4612bdf6000888480600101955088612822565b612bfc576040516368d2bf6b60e11b815260040160405180910390fd5b80821415612b94578260005414612c1257600080fd5b612c5d565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821415612c18575b50600055612688565b6000818310612c82576000828152602084905260409020611f2e565b5060009182526020526040902090565b828054612c9e906132bd565b90600052602060002090601f016020900481019282612cc05760008555612d06565b82601f10612cd957805160ff1916838001178555612d06565b82800160010185558215612d06579182015b82811115612d06578251825591602001919060010190612ceb565b50612d12929150612d16565b5090565b5b80821115612d125760008155600101612d17565b6001600160e01b03198116811461230757600080fd5b600060208284031215612d5357600080fd5b8135611f2e81612d2b565b60005b83811015612d79578181015183820152602001612d61565b838111156118545750506000910152565b60008151808452612da2816020860160208601612d5e565b601f01601f19169290920160200192915050565b602081526000611f2e6020830184612d8a565b600060208284031215612ddb57600080fd5b5035919050565b6001600160a01b038116811461230757600080fd5b60008060408385031215612e0a57600080fd5b8235612e1581612de2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612e6157612e61612e23565b604052919050565b60006001600160401b03831115612e8257612e82612e23565b612e95601f8401601f1916602001612e39565b9050828152838383011115612ea957600080fd5b828260208301376000602084830101529392505050565b600060208284031215612ed257600080fd5b81356001600160401b03811115612ee857600080fd5b8201601f81018413612ef957600080fd5b61291284823560208401612e69565b80358015158114612f1857600080fd5b919050565b600060208284031215612f2f57600080fd5b611f2e82612f08565b600060208284031215612f4a57600080fd5b8135611f2e81612de2565b600080600060608486031215612f6a57600080fd5b8335612f7581612de2565b92506020840135612f8581612de2565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b81811015612fce57835183529284019291840191600101612fb2565b50909695505050505050565b60006001600160401b03821115612ff357612ff3612e23565b5060051b60200190565b600082601f83011261300e57600080fd5b8135602061302361301e83612fda565b612e39565b82815260059290921b8401810191818101908684111561304257600080fd5b8286015b8481101561305d5780358352918301918301613046565b509695505050505050565b6000806040838503121561307b57600080fd5b82356001600160401b038082111561309257600080fd5b818501915085601f8301126130a657600080fd5b813560206130b661301e83612fda565b82815260059290921b840181019181810190898411156130d557600080fd5b948201945b838610156130fc5785356130ed81612de2565b825294820194908201906130da565b9650508601359250508082111561311257600080fd5b5061311f85828601612ffd565b9150509250929050565b6000806040838503121561313c57600080fd5b823561314781612de2565b915061315560208401612f08565b90509250929050565b6000806000806080858703121561317457600080fd5b843561317f81612de2565b9350602085013561318f81612de2565b92506040850135915060608501356001600160401b038111156131b157600080fd5b8501601f810187136131c257600080fd5b6131d187823560208401612e69565b91505092959194509250565b600080600080606085870312156131f357600080fd5b843593506020850135925060408501356001600160401b038082111561321857600080fd5b818701915087601f83011261322c57600080fd5b81358181111561323b57600080fd5b8860208260051b850101111561325057600080fd5b95989497505060200194505050565b6000806040838503121561327257600080fd5b823561327d81612de2565b9150602083013561328d81612de2565b809150509250929050565b600080604083850312156132ab57600080fd5b82359150602083013561328d81612de2565b600181811c908216806132d157607f821691505b602082108114156132f257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f54686973206d6574686f64206973206f6e6c7920617661696c61626c6520627960408201526d2061646d696e206164647265737360901b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156133865761338661335c565b5060010190565b60008282101561339f5761339f61335c565b500390565b6000602082840312156133b657600080fd5b8151611f2e81612de2565b602080825260149082015273496e76616c6964206d696e7420616d6f756e742160601b604082015260600190565b600082198211156134025761340261335c565b500190565b6020808252601490820152734d617820737570706c792065786365656465642160601b604082015260600190565b600081600019048311821515161561344f5761344f61335c565b500290565b6000845160206134678285838a01612d5e565b85519184019161347a8184848a01612d5e565b8554920191600090600181811c908083168061349757607f831692505b8583108114156134b557634e487b7160e01b85526022600452602485fd5b8080156134c957600181146134da57613507565b60ff19851688528388019550613507565b60008b81526020902060005b858110156134ff5781548a8201529084019088016134e6565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061354b90830184612d8a565b9695505050505050565b60006020828403121561356757600080fd5b8151611f2e81612d2b565b634e487b7160e01b600052601260045260246000fd5b60008261359757613597613572565b500490565b6000826135ab576135ab613572565b50069056fea26469706673582212204e790fbac9f0ddc37a21a68936ed56a23270b25713053ce8a88f67414a96337e64736f6c63430008090033";

export class DeeDooTeacherTest01__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeeDooTeacherTest01> {
    return super.deploy(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    ) as Promise<DeeDooTeacherTest01>;
  }
  getDeployTransaction(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    );
  }
  attach(address: string): DeeDooTeacherTest01 {
    return super.attach(address) as DeeDooTeacherTest01;
  }
  connect(signer: Signer): DeeDooTeacherTest01__factory {
    return super.connect(signer) as DeeDooTeacherTest01__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeeDooTeacherTest01Interface {
    return new utils.Interface(_abi) as DeeDooTeacherTest01Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeeDooTeacherTest01 {
    return new Contract(address, _abi, signerOrProvider) as DeeDooTeacherTest01;
  }
}
